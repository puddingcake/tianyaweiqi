(function(factory){var define=window.define||{};if(typeof module!=="undefined"&&typeof exports==="object"&&define.cmd){module.exports=factory()}else{if(typeof define==="function"&&define.amd){define(factory)}else{window.Bridge=factory()}}})(function(){var DEBUG=false;var callbacks={};var urlCallBacks={};var guid=0;var ua=navigator.userAgent;var ANDROID=/android/i.test(ua);var IOS=/iphone|ipad/i.test(ua);function log(){if(DEBUG){console.log(console,Array.prototype.join.call(arguments," "))}}function invokeUrl(url){if(ANDROID){prompt(url)}else{if(IOS){window.location.hash=encodeURIComponent(url)}}}var Bridge={callByJsUrl:function(url,callback){var jstoken=guid++;urlCallBacks[jstoken]=callback;if(url.indexOf("linkurl")>=0){var urlData=url.split("linkurl");url=urlData[0]+"jstoken="+jstoken+"&linkurl"+urlData[1]}else{if(url.indexOf("?")>=0){url=url+"&jstoken="+jstoken}else{url=url+"?jstoken="+jstoken}}log("callByJSUrl",JSON.stringify(url));invokeUrl(url)},callByNativeUrl:function(optStr){log("callByNativeUrl",JSON.stringify(optStr));var opt={};try{opt=JSON.parse(optStr)}catch(e){console.error("[bridge]:客户端返回的JSON解析失败")}var callback=urlCallBacks[opt.jsToken];var ret=opt.ret||{};if(ret.error==="0"){callback(ret)}else{callback(ret)}}};return Bridge});